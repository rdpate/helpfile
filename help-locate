#!/bin/sh -ue
#.version
# 0.0.0
#.help
# help-locate NAME [SUBTOPIC..]
# help-locate --version NAME [SUBTOPIC..]
#
# Locate filename for NAME's help or version, either overview or for SUBTOPIC.
#
# Options:
# -v  --version     version instead of help
#     --locale=L    use L instead of $LC_ALL, $LC_CTYPE, or $LANG
#
# -c  --command     lookup through $PATH if NAME lacks "/", like which(1)

fatal() {
    printf %s\\n "$(basename "$0") error: $2" >&2
    exit "$1"
}

path_lookup=false
section=help
user_lang_country=
handle_option() {
    case "$1" in
        c|command)
            [ $# = 1 ] || fatal 64 "unexpected value for option $1"
            path_lookup=true
            ;;
        v|version)
            [ $# = 1 ] || fatal 64 "unexpected value for option $1"
            section=version
            ;;
        locale)
            [ $# = 2 ] || fatal 64 "expected value for option $1"
            user_lang_country="$2"
            ;;
        *)
            fatal 64 "unknown option: $1"
            ;;
    esac
}

while [ $# -gt 0 ]; do
    case "$1" in
        --)
            shift
            break;;
        --*=*)
            x="${1#--}"
            handle_option "${x%%=*}" "${x#*=}"
            shift;;
        --*)
            handle_option "${1#--}"
            shift;;
        -?*)
            if [ ${#1} = 2 ]; then
                handle_option "${1#-}"
            else
                v="${1#??}"
                x="${1%"$v"}"
                handle_option "${x#-}" "$v"
            fi
            shift;;
        *)
            break;;
    esac
done


if [ $# -eq 0 ]; then
    fatal 64 'expected arguments: NAME'
else
    for x; do
        if [ '' = "$x" ]; then
            fatal 64 'unexpected empty argument'
        fi
    done
fi

if [ -z "$user_lang_country" ]; then
    user_lang_country="${LC_ALL:-${LC_CTYPE:-${LANG:-en}}}"
fi
user_lang_country="$(printf %s "$user_lang_country" | sed -r 's/^(..)(_..)?.*/\1\2/' | tr A-Z a-z)"
case "$user_lang_country" in
    [abcdefghijklmnopqrstuvwxyz][abcdefghijklmnopqrstuvwxyz])
        user_lang="$user_lang_country"
        user_lang_country=
        ;;
    [abcdefghijklmnopqrstuvwxyz][abcdefghijklmnopqrstuvwxyz]_[abcdefghijklmnopqrstuvwxyz][abcdefghijklmnopqrstuvwxyz])
        user_lang="${user_lang_country%_*}"
        ;;
    *)
        user_lang_country=
        user_lang=en
        ;;
esac

main() {
    local command file
    command="$1"
    file="$1"
    if $path_lookup; then
        case "$1" in
            */*) ;;
            *)
                file="$(which "$1" 2>/dev/null)" || fatal 69 "not found in PATH: $1"
                ;;
        esac
    fi
    shift
    if show_helpfile "$section" "$file" "$@"; then
        return 0
    elif inline_section "$section" "$file" "$@"; then
        return 0
    elif [ $path_lookup = true -a help = "$section" -a $# = 0 -a $? = 2 ]; then
        case "$command" in
            */*) ;;
            *)
                printf 'man 1 %s\n' "$command"
                return 0
                ;;
        esac
    fi
    set -- "$file" "$@"
    fatal 69 "$section not found: $*"
}

inline_section() { # SECTION FILE [SUBTOPIC..]
    # Return 2 if inline section not found.
    if [ $# != 2 ]; then
        return 2
    fi
    local line
    while :; do
        line="$(readline)" || return 2
        case "$line" in
            "#.$1"|"#.$1 "*)
                printf 'internal %s %s\n' "$1" "$2"
                return
                ;;
            '#'*)
                ;;
            *)
                return 2
                ;;
        esac
    done <"$2"
}

readline() {
    local line
    read -r line || return 1
    printf %s "$line" | sed -r 's/ +$//'
}

show_helpfile() { # SECTION FILE [SUBTOPIC..]
    local section file subtopic dirname target link
    section="$1"
    file="$2"
    shift 2
    if [ $# = 0 ]; then
        subtopic=
    else
        subtopic="$(printf /%s "$@")"
    fi
    while :; do
        dirname="$(dirname "$file")"
        if target="$(locale_helpfile "$dirname/help/$(basename "$file")$subtopic.$section")"; then
            printf 'file %s\n' "$target"
            return 0
        fi
        if [ -L "$file" ]; then
            link="$(readlink "$file")"
            case "$link" in
                /*)
                    file="$link"
                    ;;
                *)
                    file="$dirname/$link"
                    ;;
            esac
        else
            return 1
        fi
    done
}

locale_helpfile() { # BASE
    local locale target
    for locale in $user_lang_country $user_lang; do
        target="$1.$locale.txt"
        if [ -e "$target" ]; then
            printf %s "$target"
            return 0
        fi
    done
    for target in "$1.$user_lang"_[abcdefghijklmnopqrstuvwxyz][abcdefghijklmnopqrstuvwxyz].txt; do
        if [ -e "$target" ]; then
            printf %s "$target"
            return 0
        fi
    done
    for target in "$1.en.txt" "$1."[abcdefghijklmnopqrstuvwxyz][abcdefghijklmnopqrstuvwxyz].txt "$1."[abcdefghijklmnopqrstuvwxyz][abcdefghijklmnopqrstuvwxyz]_[abcdefghijklmnopqrstuvwxyz][abcdefghijklmnopqrstuvwxyz].txt; do
        if [ -e "$target" ]; then
            printf %s "$target"
            return 0
        fi
    done
    return 1
}

main "$@"
