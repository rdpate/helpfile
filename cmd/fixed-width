#!/bin/sh -ue

fatal() { rc="$1"; shift; printf %s\\n "${0##*/} error: $*" >&2 || true; exit "$rc"; }

#format=txt
pager="${PAGER:-less}"
synopsis_only=false
wrap=true
min_width=20
max_width=80
if [ -t 1 ]; then
    stdout_terminal=true
else
    stdout_terminal=false
fi
handle_option() {
    case "$1" in
        format)
            [ -n "${2:-}" ] || fatal 64 "missing value for option $1"
            case "$2" in
                txt|md)
                    # TODO: better Markdown support, even if rudimentary
                    #format="$2"
                    ;;
                *) fatal 64 "unknown value for option $1" ;;
            esac
            ;;
        no-pager)
            [ $# = 1 ] || fatal 64 "unexpected value for option $1"
            pager=cat
            ;;
        s|synopsis)
            [ $# = 1 ] || fatal 64 "unexpected value for option $1"
            synopsis_only=true
            ;;
        wrap)
            [ $# = 2 ] || fatal 64 "missing value for option $1"
            if [ 0 = "$2" ]; then
                wrap=false
            else
                if [ x"$2" != x"$(printf %s "$2" | tr -c -d 0-9)" ]; then
                    fatal 64 "invalid numeric value for option $1"
                fi
                wrap=true
                max_width="$2"
            fi
            ;;
        no-wrap)
            [ $# = 1 ] || fatal 64 "unexpected value for option $1"
            wrap=false
            ;;
        *)
            fatal 64 "unknown option: $1"
            ;;
    esac
}

while [ $# -gt 0 ]; do
    case "$1" in
        --)
            shift
            break;;
        --*=*)
            x="${1#--}"
            handle_option "${x%%=*}" "${x#*=}"
            shift;;
        --*)
            handle_option "${1#--}"
            shift;;
        -?*)
            if [ ${#1} = 2 ]; then
                handle_option "${1#-}"
            else
                v="${1#??}"
                x="${1%"$v"}"
                handle_option "${x#-}" "$v"
            fi
            shift;;
        *)
            break;;
    esac
done


output_text() {
    if ! $wrap; then
        if $stdout_terminal; then
            "$pager"
        else
            cat
        fi
        return
    fi

    if $stdout_terminal; then
        width="$(tput cols)" || width="${COLUMNS:-80}"
    else
        width="${COLUMNS:-80}"
    fi
    if [ "$max_width" -le "$width" ]; then
        width="$max_width"
    elif [ "$min_width" -ge "$width" ]; then
        width="$min_width"
    fi

    if $stdout_terminal && [ cat != "$pager" ]; then
        fold -s -w"$width" | "$pager"
    else
        fold -s -w"$width"
    fi
}

if [ $# -gt 1 ]; then
    fatal 64 'unexpected extra arguments'
elif [ $# = 1 -a x"${1:-}" != x- ]; then
    exec <"$1"
fi

if $synopsis_only; then
    sed -r -n '/^#|^=+$/d; s/ +$//; /^$/q; p' | output_text
else
    sed -r -n '/^#/d; s/ +$//; p' | cat -s | output_text
fi
